From eb082a607e646fa0c729201d8cabb1abab762473 Mon Sep 17 00:00:00 2001
From: Adrian Stratulat <adrian.stratulat@enea.com>
Date: Sat, 30 Nov 2019 12:06:23 +0200
Subject: [PATCH] Disable openmp code

---
 CMakeLists.txt | 32 ++++----------------------------
 1 file changed, 4 insertions(+), 28 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 06f9796..076abcb 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -951,30 +951,6 @@ add_library (wsjt_cxx STATIC ${wsjt_CSRCS} ${wsjt_CXXSRCS})
 # build an OpenMP variant of the Fortran library routines
 add_library (wsjt_fort STATIC ${wsjt_FSRCS})
 target_link_libraries (wsjt_fort  ${FFTW3_LIBRARIES})
-if (${OPENMP_FOUND} OR APPLE)
-  add_library (wsjt_fort_omp STATIC ${wsjt_FSRCS})
-  target_link_libraries (wsjt_fort_omp  ${FFTW3_LIBRARIES})
-  if (OpenMP_C_FLAGS)
-    set_target_properties (wsjt_fort_omp
-      PROPERTIES
-      COMPILE_FLAGS "${OpenMP_C_FLAGS}"
-      )
-  endif ()
-  set_target_properties (wsjt_fort_omp
-    PROPERTIES
-    Fortran_MODULE_DIRECTORY ${CMAKE_BINARY_DIR}/fortran_modules_omp
-    )
-  file (MAKE_DIRECTORY ${CMAKE_BINARY_DIR}/fortran_modules_omp)
-  if (APPLE)
-    # On  Mac  we don't  have  working  OpenMP  support in  the  C/C++
-    # compilers so  we have to manually  set the correct flags  to get
-    # OpenMP support in js8.
-    target_compile_options (wsjt_fort_omp
-      PRIVATE
-      $<$<COMPILE_LANGUAGE:Fortran>:-fopenmp>   # assumes GNU style Fortran compiler
-      )
-  endif (APPLE)
-endif (${OPENMP_FOUND} OR APPLE)
 
 # build a library for the QCustomPlot widget
 add_library (qcp STATIC ${qcp_CXXSRCS})
@@ -1031,7 +1007,7 @@ if (${OPENMP_FOUND} OR APPLE)
     endif ()
     set_target_properties (js8
       PROPERTIES
-      Fortran_MODULE_DIRECTORY ${CMAKE_BINARY_DIR}/fortran_modules_omp
+      Fortran_MODULE_DIRECTORY ${CMAKE_BINARY_DIR}/fortran_modules
       )
   endif (APPLE)
   if (WIN32)
@@ -1039,7 +1015,7 @@ if (${OPENMP_FOUND} OR APPLE)
     #   LINK_FLAGS -Wl,--stack,16777216
     #   )
   endif ()
-  target_link_libraries (js8 wsjt_fort_omp wsjt_cxx Qt5::Core)
+  target_link_libraries (js8 wsjt_fort wsjt_cxx Qt5::Core)
 else (${OPENMP_FOUND} OR APPLE)
   target_link_libraries (js8 wsjt_fort wsjt_cxx Qt5::Core)
 endif (${OPENMP_FOUND} OR APPLE)
@@ -1075,7 +1051,7 @@ target_include_directories (js8call PRIVATE ${FFTW3_INCLUDE_DIRS})
 if (APPLE)
   target_link_libraries (js8call wsjt_fort wsjt_cxx wsjt_qt wsjt_qtmm ${hamlib_LIBRARIES} ${FFTW3_LIBRARIES})
 else ()
-  target_link_libraries (js8call wsjt_fort_omp wsjt_cxx wsjt_qt wsjt_qtmm ${hamlib_LIBRARIES} ${FFTW3_LIBRARIES})
+  target_link_libraries (js8call wsjt_fort wsjt_cxx wsjt_qt wsjt_qtmm ${hamlib_LIBRARIES} ${FFTW3_LIBRARIES})
   if (OpenMP_C_FLAGS)
     set_target_properties (js8call PROPERTIES
       COMPILE_FLAGS "${OpenMP_C_FLAGS}"
@@ -1083,7 +1059,7 @@ else ()
       )
   endif ()
   set_target_properties (js8call PROPERTIES
-    Fortran_MODULE_DIRECTORY ${CMAKE_BINARY_DIR}/fortran_modules_omp
+    Fortran_MODULE_DIRECTORY ${CMAKE_BINARY_DIR}/fortran_modules
     )
   if (WIN32)
     set_target_properties (js8call PROPERTIES
-- 
2.17.1

